<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
     <form action="/test" method="post">
       <input type="text" name="test">
       <input type="submit">
     </form>
</body>
</html>

const verifyPayment = (ref,mycallback) => {
  //       const option = {
  //           url : 'https://api.paystack.co/transaction/verify/' + encodeURIComponent(ref),
  //           headers : {
  //               authorization: MySecretKey,
  //               'content-type': 'application/json',
  //               'cache-control': 'no-cache'
  //          }
  //       }
  //       const callback = (error, response, body)=>{
  //           return mycallback(error, body);
  //       }
  //       fetch(option,callback);
  //   }

  // const form = _.pick(req.body,['amount','email','full_name']);
//   const form = {
//        full_name : req.body.full_name,
//      amount : '20000',
//      email : req.body.email 
//   }
//     form.metadata = {
//         full_name : form.full_name
//     }

//     //    form.amount*= 100;
//     //  form.amount = JSON.stringify(new String(form.amount))
//     console.log(typeof form.amount )
//     initializePayment(form, (error, body)=>{
//         if(error){
//             //handle errors
//             console.log(error);
//             return;
//         }
//         response = JSON.parse(body);
//         res.redirect(response.data.authorization_url)
    // });

    const ref = req.query.reference;
    verifyPayment(ref, (error,body)=>{
        if(error){
            //handle errors appropriately
            console.log(error)
            return res.redirect('/error');
        }
        response = JSON.parse(body);
        const data = _.at(response.data, ['reference', 'amount','customer.email', 'metadata.full_name']);
        [reference, amount, email, full_name] =  data;
        newDonor = {reference, amount, email, full_name}
        const donor = new Donor(newDonor)
        donor.save().then((donor)=>{
            if(!donor){
                res.redirect('/error');
            }
            res.redirect('/receipt/'+donor._id);
        }).catch((e)=>{
            res.redirect('/error');
       });
    });

    
    const initializePayment = (form,mycallback) => {
      const MySecretKey = 'Bearer sk_test_ba81da9729899e232322dddd5ea4a6c6ad34d38d';
      const  url = 'https://api.paystack.co/transaction/initialize'
        const option = {
          method: 'POST',
            headers : {
                authorization: MySecretKey,
                'content-type': 'application/json',
                'cache-control': 'no-cache'
           },
           form
        }
        const callback = (error, response, body)=>{
            return mycallback(error, body);
        }
        fetch(url,option).then(res => res.json())
        .then(console.log(form))
          .then(json => console.log(json));
          };
  